# -*- coding: utf-8 -*-
"""folium.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18Yb0GzJ4Xy1n_6UkKTUWrBOLfZ0AYDKX
"""

!pip install pandas
import pandas as pd

df = pd.read_csv('/content/accidents_2017_to_2023_portugues.csv', sep=',', on_bad_lines=lambda bad_line: bad_line.replace('"', ''), engine='python')

df = df[df['uf'] == "SP"]

df.columns

df = df.drop(['mortos','feridos_leves','feridos_graves','ilesos','regional','delegacia'], axis=1)

pd.set_option('display.max_rows', None)

"df.groupby(['municipio','br'])[['veiculos']].sum().head(73).sort_values(by='veiculos',ascending=True)"

sampa = df.copy()

"sampa = df[df['br'] == 153.0]"

"sampa = sampa[sampa['tipo_pista']== 'Dupla']"
"sampa = sampa[sampa['tipo_acidente']== 'Tombamento']"
"sampa = sampa[sampa['tracado_via']== 'Curva']"

"sampa = sampa[(sampa['data_inversa'] >= '2017-01-01') & (sampa['data_inversa'] <= '2017-12-12')]"



!pip install folium

import folium
from folium.plugins import HeatMap
heat_data = []

latitude_media = sampa['latitude'].mean()
longitude_media = sampa['longitude'].mean()

mapa = folium.Map(location=[latitude_media, longitude_media], zoom_start=12)

coordenadas = [[row['latitude'], row['longitude']] for index, row in sampa.iterrows()]



HeatMap(coordenadas).add_to(mapa)

pontos = folium.Map(location=[-23.550520, -46.633308], zoom_start=12)

for index, row in sampa.iterrows():
    folium.Marker([row['latitude'], row['longitude']]).add_to(pontos);

folium.TileLayer('OpenTopoMap', name='OpenTopoMap').add_to(pontos)
folium.TileLayer('CartoDB dark_matter', name='Dark Matter').add_to(pontos)
folium.TileLayer('CartoDB positron', name='Positron').add_to(pontos)
folium.LayerControl().add_to(pontos) ###variavel que cria uma caixa que permite mudar o estilo do mapa;



folium.TileLayer('CartoDB dark_matter', name='Dark Matter').add_to(mapa)
folium.TileLayer('CartoDB positron', name='Positron').add_to(mapa)
folium.TileLayer('OpenTopoMap', name='OpenTopoMap').add_to(mapa)
folium.LayerControl().add_to(mapa) ###variavel que cria uma caixa que permite mudar o estilo do mapa

mapa

!pip uninstall geopandas -y
!pip uninstall fiona -y
!pip install geopandas
!pip install fiona

import geopandas as gpd
import matplotlib.pyplot as plt
import fiona
import folium
!apt-get install python3-tk

"""# Realiza a importação do arquivo shp"""

municipio= gpd.read_file('/content/SP_Municipios_2023.shp')

"""# Este codigo gera uma base com o tiles cartodbpositron"""

regioes = folium.Map(location = [-22, -43],
                      zoom_start = 12,
                     tiles = 'cartodbpositron')

"""# O codigo abaixo cria a camada municipio sobre a primeira camada base criada no Folium.Map"""

folium.GeoJson(municipio).add_to(regioes)

"""# A linha abaixo localiza uma linha especifica no SP_Municipios_2023.shp"""

linha_especifica = municipio.iloc[[2]]

"""# O objetivo do codigo abaixo é destacar o limite do municipio sobre a segunda camada do GeoJson"""

folium.GeoJson(
    linha_especifica,
    style_function=lambda x: {
        'fillColor': 'green',
        'color': 'red',
        'weight': 2,
        'fillOpacity': 0.2
    }
).add_to(regioes)

regioes

import json

"""# GeoDataFrame com a coluna de geometria e a variável para diferenciar"""

municipio['geometry'] = municipio.geometry

"""# Mapa base"""

teste = folium.Map(location = [-22, -43],
                      zoom_start = 12,
                     tiles = 'cartodbpositron')

"""# converte para GeoJSON para uso no Folium"""

convertido = municipio.to_json()

"""# definir a cor de um município com base na população"""

def estilo_funcao(feature):
    return {
        'fillColor': '#ffffff',  # Cor de preenchimento inicial (branco)
        'color': 'black',         # Cor da borda (preto)
        'weight': 2,              # Espessura da borda
        'fillOpacity': 0.5        # Opacidade do preenchimento
    }
    # Função para definir a cor do município quando o mouse passa sobre ele
def on_hover(feature):
    return {
        'fillColor': '#ff7f0e',  # Cor que vai mudar ao passar o mouse (laranja)
        'color': 'black',         # Cor da borda
        'weight': 2,              # Espessura da borda
        'fillOpacity': 0.8        # Opacidade do preenchimento
    }

"""# Adicionar o GeoJSON ao mapa com a interatividade"""

# Adicionar o GeoJSON ao mapa com a interatividade
folium.GeoJson(convertido,
    style_function=estilo_funcao,
    highlight_function=on_hover,  # Evento de hover para mudar a cor
).add_to(teste)

teste